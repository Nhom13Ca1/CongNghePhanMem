#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace LinQtoSQL
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="QL_HocSinh")]
	public partial class QLHSDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertDIEM(DIEM instance);
    partial void UpdateDIEM(DIEM instance);
    partial void DeleteDIEM(DIEM instance);
    partial void InsertTHOIKHOABIEU(THOIKHOABIEU instance);
    partial void UpdateTHOIKHOABIEU(THOIKHOABIEU instance);
    partial void DeleteTHOIKHOABIEU(THOIKHOABIEU instance);
    partial void InsertGIAOVIEN(GIAOVIEN instance);
    partial void UpdateGIAOVIEN(GIAOVIEN instance);
    partial void DeleteGIAOVIEN(GIAOVIEN instance);
    partial void InsertHOCKY(HOCKY instance);
    partial void UpdateHOCKY(HOCKY instance);
    partial void DeleteHOCKY(HOCKY instance);
    partial void InsertHOCSINH(HOCSINH instance);
    partial void UpdateHOCSINH(HOCSINH instance);
    partial void DeleteHOCSINH(HOCSINH instance);
    partial void InsertKETQUAHOCTAP(KETQUAHOCTAP instance);
    partial void UpdateKETQUAHOCTAP(KETQUAHOCTAP instance);
    partial void DeleteKETQUAHOCTAP(KETQUAHOCTAP instance);
    partial void InsertKHOI(KHOI instance);
    partial void UpdateKHOI(KHOI instance);
    partial void DeleteKHOI(KHOI instance);
    partial void InsertLOP(LOP instance);
    partial void UpdateLOP(LOP instance);
    partial void DeleteLOP(LOP instance);
    partial void InsertMONHOC(MONHOC instance);
    partial void UpdateMONHOC(MONHOC instance);
    partial void DeleteMONHOC(MONHOC instance);
    partial void InsertPHANCONG(PHANCONG instance);
    partial void UpdatePHANCONG(PHANCONG instance);
    partial void DeletePHANCONG(PHANCONG instance);
    #endregion
		
		public QLHSDataContext() : 
				base(global::LinQtoSQL.Properties.Settings.Default.QL_HocSinhConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public QLHSDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public QLHSDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public QLHSDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public QLHSDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<DIEM> DIEMs
		{
			get
			{
				return this.GetTable<DIEM>();
			}
		}
		
		public System.Data.Linq.Table<THOIKHOABIEU> THOIKHOABIEUs
		{
			get
			{
				return this.GetTable<THOIKHOABIEU>();
			}
		}
		
		public System.Data.Linq.Table<GIAOVIEN> GIAOVIENs
		{
			get
			{
				return this.GetTable<GIAOVIEN>();
			}
		}
		
		public System.Data.Linq.Table<HOCKY> HOCKies
		{
			get
			{
				return this.GetTable<HOCKY>();
			}
		}
		
		public System.Data.Linq.Table<HOCSINH> HOCSINHs
		{
			get
			{
				return this.GetTable<HOCSINH>();
			}
		}
		
		public System.Data.Linq.Table<KETQUAHOCTAP> KETQUAHOCTAPs
		{
			get
			{
				return this.GetTable<KETQUAHOCTAP>();
			}
		}
		
		public System.Data.Linq.Table<KHOI> KHOIs
		{
			get
			{
				return this.GetTable<KHOI>();
			}
		}
		
		public System.Data.Linq.Table<LOP> LOPs
		{
			get
			{
				return this.GetTable<LOP>();
			}
		}
		
		public System.Data.Linq.Table<MONHOC> MONHOCs
		{
			get
			{
				return this.GetTable<MONHOC>();
			}
		}
		
		public System.Data.Linq.Table<PHANCONG> PHANCONGs
		{
			get
			{
				return this.GetTable<PHANCONG>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.DIEM")]
	public partial class DIEM : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _MADIEM;
		
		private string _MAKETQUA;
		
		private string _MAMON;
		
		private string _MAHOCKY;
		
		private System.Nullable<double> _DIEMTB;
		
		private EntityRef<HOCKY> _HOCKY;
		
		private EntityRef<KETQUAHOCTAP> _KETQUAHOCTAP;
		
		private EntityRef<MONHOC> _MONHOC;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMADIEMChanging(string value);
    partial void OnMADIEMChanged();
    partial void OnMAKETQUAChanging(string value);
    partial void OnMAKETQUAChanged();
    partial void OnMAMONChanging(string value);
    partial void OnMAMONChanged();
    partial void OnMAHOCKYChanging(string value);
    partial void OnMAHOCKYChanged();
    partial void OnDIEMTBChanging(System.Nullable<double> value);
    partial void OnDIEMTBChanged();
    #endregion
		
		public DIEM()
		{
			this._HOCKY = default(EntityRef<HOCKY>);
			this._KETQUAHOCTAP = default(EntityRef<KETQUAHOCTAP>);
			this._MONHOC = default(EntityRef<MONHOC>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MADIEM", DbType="NChar(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MADIEM
		{
			get
			{
				return this._MADIEM;
			}
			set
			{
				if ((this._MADIEM != value))
				{
					this.OnMADIEMChanging(value);
					this.SendPropertyChanging();
					this._MADIEM = value;
					this.SendPropertyChanged("MADIEM");
					this.OnMADIEMChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MAKETQUA", DbType="NChar(10)")]
		public string MAKETQUA
		{
			get
			{
				return this._MAKETQUA;
			}
			set
			{
				if ((this._MAKETQUA != value))
				{
					if (this._KETQUAHOCTAP.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMAKETQUAChanging(value);
					this.SendPropertyChanging();
					this._MAKETQUA = value;
					this.SendPropertyChanged("MAKETQUA");
					this.OnMAKETQUAChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MAMON", DbType="NChar(10) NOT NULL", CanBeNull=false)]
		public string MAMON
		{
			get
			{
				return this._MAMON;
			}
			set
			{
				if ((this._MAMON != value))
				{
					if (this._MONHOC.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMAMONChanging(value);
					this.SendPropertyChanging();
					this._MAMON = value;
					this.SendPropertyChanged("MAMON");
					this.OnMAMONChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MAHOCKY", DbType="VarChar(10) NOT NULL", CanBeNull=false)]
		public string MAHOCKY
		{
			get
			{
				return this._MAHOCKY;
			}
			set
			{
				if ((this._MAHOCKY != value))
				{
					if (this._HOCKY.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMAHOCKYChanging(value);
					this.SendPropertyChanging();
					this._MAHOCKY = value;
					this.SendPropertyChanged("MAHOCKY");
					this.OnMAHOCKYChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DIEMTB", DbType="Float")]
		public System.Nullable<double> DIEMTB
		{
			get
			{
				return this._DIEMTB;
			}
			set
			{
				if ((this._DIEMTB != value))
				{
					this.OnDIEMTBChanging(value);
					this.SendPropertyChanging();
					this._DIEMTB = value;
					this.SendPropertyChanged("DIEMTB");
					this.OnDIEMTBChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="HOCKY_DIEM", Storage="_HOCKY", ThisKey="MAHOCKY", OtherKey="MAHOCKY", IsForeignKey=true)]
		public HOCKY HOCKY
		{
			get
			{
				return this._HOCKY.Entity;
			}
			set
			{
				HOCKY previousValue = this._HOCKY.Entity;
				if (((previousValue != value) 
							|| (this._HOCKY.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._HOCKY.Entity = null;
						previousValue.DIEMs.Remove(this);
					}
					this._HOCKY.Entity = value;
					if ((value != null))
					{
						value.DIEMs.Add(this);
						this._MAHOCKY = value.MAHOCKY;
					}
					else
					{
						this._MAHOCKY = default(string);
					}
					this.SendPropertyChanged("HOCKY");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="KETQUAHOCTAP_DIEM", Storage="_KETQUAHOCTAP", ThisKey="MAKETQUA", OtherKey="MAKETQUA", IsForeignKey=true)]
		public KETQUAHOCTAP KETQUAHOCTAP
		{
			get
			{
				return this._KETQUAHOCTAP.Entity;
			}
			set
			{
				KETQUAHOCTAP previousValue = this._KETQUAHOCTAP.Entity;
				if (((previousValue != value) 
							|| (this._KETQUAHOCTAP.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._KETQUAHOCTAP.Entity = null;
						previousValue.DIEMs.Remove(this);
					}
					this._KETQUAHOCTAP.Entity = value;
					if ((value != null))
					{
						value.DIEMs.Add(this);
						this._MAKETQUA = value.MAKETQUA;
					}
					else
					{
						this._MAKETQUA = default(string);
					}
					this.SendPropertyChanged("KETQUAHOCTAP");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MONHOC_DIEM", Storage="_MONHOC", ThisKey="MAMON", OtherKey="MAMON", IsForeignKey=true)]
		public MONHOC MONHOC
		{
			get
			{
				return this._MONHOC.Entity;
			}
			set
			{
				MONHOC previousValue = this._MONHOC.Entity;
				if (((previousValue != value) 
							|| (this._MONHOC.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MONHOC.Entity = null;
						previousValue.DIEMs.Remove(this);
					}
					this._MONHOC.Entity = value;
					if ((value != null))
					{
						value.DIEMs.Add(this);
						this._MAMON = value.MAMON;
					}
					else
					{
						this._MAMON = default(string);
					}
					this.SendPropertyChanged("MONHOC");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.THOIKHOABIEU")]
	public partial class THOIKHOABIEU : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _MATKB;
		
		private string _THU2;
		
		private string _THU3;
		
		private string _THU4;
		
		private string _THU5;
		
		private string _THU6;
		
		private EntitySet<LOP> _LOPs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMATKBChanging(string value);
    partial void OnMATKBChanged();
    partial void OnTHU2Changing(string value);
    partial void OnTHU2Changed();
    partial void OnTHU3Changing(string value);
    partial void OnTHU3Changed();
    partial void OnTHU4Changing(string value);
    partial void OnTHU4Changed();
    partial void OnTHU5Changing(string value);
    partial void OnTHU5Changed();
    partial void OnTHU6Changing(string value);
    partial void OnTHU6Changed();
    #endregion
		
		public THOIKHOABIEU()
		{
			this._LOPs = new EntitySet<LOP>(new Action<LOP>(this.attach_LOPs), new Action<LOP>(this.detach_LOPs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MATKB", DbType="NChar(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MATKB
		{
			get
			{
				return this._MATKB;
			}
			set
			{
				if ((this._MATKB != value))
				{
					this.OnMATKBChanging(value);
					this.SendPropertyChanging();
					this._MATKB = value;
					this.SendPropertyChanged("MATKB");
					this.OnMATKBChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_THU2", DbType="NVarChar(50)")]
		public string THU2
		{
			get
			{
				return this._THU2;
			}
			set
			{
				if ((this._THU2 != value))
				{
					this.OnTHU2Changing(value);
					this.SendPropertyChanging();
					this._THU2 = value;
					this.SendPropertyChanged("THU2");
					this.OnTHU2Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_THU3", DbType="NVarChar(50)")]
		public string THU3
		{
			get
			{
				return this._THU3;
			}
			set
			{
				if ((this._THU3 != value))
				{
					this.OnTHU3Changing(value);
					this.SendPropertyChanging();
					this._THU3 = value;
					this.SendPropertyChanged("THU3");
					this.OnTHU3Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_THU4", DbType="NVarChar(50)")]
		public string THU4
		{
			get
			{
				return this._THU4;
			}
			set
			{
				if ((this._THU4 != value))
				{
					this.OnTHU4Changing(value);
					this.SendPropertyChanging();
					this._THU4 = value;
					this.SendPropertyChanged("THU4");
					this.OnTHU4Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_THU5", DbType="NVarChar(50)")]
		public string THU5
		{
			get
			{
				return this._THU5;
			}
			set
			{
				if ((this._THU5 != value))
				{
					this.OnTHU5Changing(value);
					this.SendPropertyChanging();
					this._THU5 = value;
					this.SendPropertyChanged("THU5");
					this.OnTHU5Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_THU6", DbType="NVarChar(50)")]
		public string THU6
		{
			get
			{
				return this._THU6;
			}
			set
			{
				if ((this._THU6 != value))
				{
					this.OnTHU6Changing(value);
					this.SendPropertyChanging();
					this._THU6 = value;
					this.SendPropertyChanged("THU6");
					this.OnTHU6Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="THOIKHOABIEU_LOP", Storage="_LOPs", ThisKey="MATKB", OtherKey="MATKB")]
		public EntitySet<LOP> LOPs
		{
			get
			{
				return this._LOPs;
			}
			set
			{
				this._LOPs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_LOPs(LOP entity)
		{
			this.SendPropertyChanging();
			entity.THOIKHOABIEU = this;
		}
		
		private void detach_LOPs(LOP entity)
		{
			this.SendPropertyChanging();
			entity.THOIKHOABIEU = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.GIAOVIEN")]
	public partial class GIAOVIEN : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _MAGIAOVIEN;
		
		private string _MAMON;
		
		private string _HOTEN;
		
		private System.Nullable<System.DateTime> _NGAYSINH;
		
		private string _GIOITINH;
		
		private string _DIACHI;
		
		private string _SODIENTHOAI;
		
		private string _MATKHAU;
		
		private EntitySet<PHANCONG> _PHANCONGs;
		
		private EntityRef<MONHOC> _MONHOC;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMAGIAOVIENChanging(string value);
    partial void OnMAGIAOVIENChanged();
    partial void OnMAMONChanging(string value);
    partial void OnMAMONChanged();
    partial void OnHOTENChanging(string value);
    partial void OnHOTENChanged();
    partial void OnNGAYSINHChanging(System.Nullable<System.DateTime> value);
    partial void OnNGAYSINHChanged();
    partial void OnGIOITINHChanging(string value);
    partial void OnGIOITINHChanged();
    partial void OnDIACHIChanging(string value);
    partial void OnDIACHIChanged();
    partial void OnSODIENTHOAIChanging(string value);
    partial void OnSODIENTHOAIChanged();
    partial void OnMATKHAUChanging(string value);
    partial void OnMATKHAUChanged();
    #endregion
		
		public GIAOVIEN()
		{
			this._PHANCONGs = new EntitySet<PHANCONG>(new Action<PHANCONG>(this.attach_PHANCONGs), new Action<PHANCONG>(this.detach_PHANCONGs));
			this._MONHOC = default(EntityRef<MONHOC>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MAGIAOVIEN", DbType="NChar(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MAGIAOVIEN
		{
			get
			{
				return this._MAGIAOVIEN;
			}
			set
			{
				if ((this._MAGIAOVIEN != value))
				{
					this.OnMAGIAOVIENChanging(value);
					this.SendPropertyChanging();
					this._MAGIAOVIEN = value;
					this.SendPropertyChanged("MAGIAOVIEN");
					this.OnMAGIAOVIENChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MAMON", DbType="NChar(10) NOT NULL", CanBeNull=false)]
		public string MAMON
		{
			get
			{
				return this._MAMON;
			}
			set
			{
				if ((this._MAMON != value))
				{
					if (this._MONHOC.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMAMONChanging(value);
					this.SendPropertyChanging();
					this._MAMON = value;
					this.SendPropertyChanged("MAMON");
					this.OnMAMONChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HOTEN", DbType="NVarChar(100)")]
		public string HOTEN
		{
			get
			{
				return this._HOTEN;
			}
			set
			{
				if ((this._HOTEN != value))
				{
					this.OnHOTENChanging(value);
					this.SendPropertyChanging();
					this._HOTEN = value;
					this.SendPropertyChanged("HOTEN");
					this.OnHOTENChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NGAYSINH", DbType="Date")]
		public System.Nullable<System.DateTime> NGAYSINH
		{
			get
			{
				return this._NGAYSINH;
			}
			set
			{
				if ((this._NGAYSINH != value))
				{
					this.OnNGAYSINHChanging(value);
					this.SendPropertyChanging();
					this._NGAYSINH = value;
					this.SendPropertyChanged("NGAYSINH");
					this.OnNGAYSINHChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GIOITINH", DbType="NVarChar(5)")]
		public string GIOITINH
		{
			get
			{
				return this._GIOITINH;
			}
			set
			{
				if ((this._GIOITINH != value))
				{
					this.OnGIOITINHChanging(value);
					this.SendPropertyChanging();
					this._GIOITINH = value;
					this.SendPropertyChanged("GIOITINH");
					this.OnGIOITINHChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DIACHI", DbType="NVarChar(300)")]
		public string DIACHI
		{
			get
			{
				return this._DIACHI;
			}
			set
			{
				if ((this._DIACHI != value))
				{
					this.OnDIACHIChanging(value);
					this.SendPropertyChanging();
					this._DIACHI = value;
					this.SendPropertyChanged("DIACHI");
					this.OnDIACHIChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SODIENTHOAI", DbType="VarChar(30)")]
		public string SODIENTHOAI
		{
			get
			{
				return this._SODIENTHOAI;
			}
			set
			{
				if ((this._SODIENTHOAI != value))
				{
					this.OnSODIENTHOAIChanging(value);
					this.SendPropertyChanging();
					this._SODIENTHOAI = value;
					this.SendPropertyChanged("SODIENTHOAI");
					this.OnSODIENTHOAIChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MATKHAU", DbType="NChar(30)")]
		public string MATKHAU
		{
			get
			{
				return this._MATKHAU;
			}
			set
			{
				if ((this._MATKHAU != value))
				{
					this.OnMATKHAUChanging(value);
					this.SendPropertyChanging();
					this._MATKHAU = value;
					this.SendPropertyChanged("MATKHAU");
					this.OnMATKHAUChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="GIAOVIEN_PHANCONG", Storage="_PHANCONGs", ThisKey="MAGIAOVIEN", OtherKey="MAGIAOVIEN")]
		public EntitySet<PHANCONG> PHANCONGs
		{
			get
			{
				return this._PHANCONGs;
			}
			set
			{
				this._PHANCONGs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MONHOC_GIAOVIEN", Storage="_MONHOC", ThisKey="MAMON", OtherKey="MAMON", IsForeignKey=true)]
		public MONHOC MONHOC
		{
			get
			{
				return this._MONHOC.Entity;
			}
			set
			{
				MONHOC previousValue = this._MONHOC.Entity;
				if (((previousValue != value) 
							|| (this._MONHOC.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MONHOC.Entity = null;
						previousValue.GIAOVIENs.Remove(this);
					}
					this._MONHOC.Entity = value;
					if ((value != null))
					{
						value.GIAOVIENs.Add(this);
						this._MAMON = value.MAMON;
					}
					else
					{
						this._MAMON = default(string);
					}
					this.SendPropertyChanged("MONHOC");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_PHANCONGs(PHANCONG entity)
		{
			this.SendPropertyChanging();
			entity.GIAOVIEN = this;
		}
		
		private void detach_PHANCONGs(PHANCONG entity)
		{
			this.SendPropertyChanging();
			entity.GIAOVIEN = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.HOCKY")]
	public partial class HOCKY : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _MAHOCKY;
		
		private string _TENHOCKY;
		
		private EntitySet<DIEM> _DIEMs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMAHOCKYChanging(string value);
    partial void OnMAHOCKYChanged();
    partial void OnTENHOCKYChanging(string value);
    partial void OnTENHOCKYChanged();
    #endregion
		
		public HOCKY()
		{
			this._DIEMs = new EntitySet<DIEM>(new Action<DIEM>(this.attach_DIEMs), new Action<DIEM>(this.detach_DIEMs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MAHOCKY", DbType="VarChar(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MAHOCKY
		{
			get
			{
				return this._MAHOCKY;
			}
			set
			{
				if ((this._MAHOCKY != value))
				{
					this.OnMAHOCKYChanging(value);
					this.SendPropertyChanging();
					this._MAHOCKY = value;
					this.SendPropertyChanged("MAHOCKY");
					this.OnMAHOCKYChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TENHOCKY", DbType="NVarChar(50)")]
		public string TENHOCKY
		{
			get
			{
				return this._TENHOCKY;
			}
			set
			{
				if ((this._TENHOCKY != value))
				{
					this.OnTENHOCKYChanging(value);
					this.SendPropertyChanging();
					this._TENHOCKY = value;
					this.SendPropertyChanged("TENHOCKY");
					this.OnTENHOCKYChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="HOCKY_DIEM", Storage="_DIEMs", ThisKey="MAHOCKY", OtherKey="MAHOCKY")]
		public EntitySet<DIEM> DIEMs
		{
			get
			{
				return this._DIEMs;
			}
			set
			{
				this._DIEMs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_DIEMs(DIEM entity)
		{
			this.SendPropertyChanging();
			entity.HOCKY = this;
		}
		
		private void detach_DIEMs(DIEM entity)
		{
			this.SendPropertyChanging();
			entity.HOCKY = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.HOCSINH")]
	public partial class HOCSINH : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _MAHOCSINH;
		
		private string _MALOP;
		
		private string _HOTEN;
		
		private string _GIOITINH;
		
		private System.Nullable<System.DateTime> _NGAYSINH;
		
		private string _DIACHI;
		
		private EntitySet<KETQUAHOCTAP> _KETQUAHOCTAPs;
		
		private EntityRef<LOP> _LOP;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMAHOCSINHChanging(string value);
    partial void OnMAHOCSINHChanged();
    partial void OnMALOPChanging(string value);
    partial void OnMALOPChanged();
    partial void OnHOTENChanging(string value);
    partial void OnHOTENChanged();
    partial void OnGIOITINHChanging(string value);
    partial void OnGIOITINHChanged();
    partial void OnNGAYSINHChanging(System.Nullable<System.DateTime> value);
    partial void OnNGAYSINHChanged();
    partial void OnDIACHIChanging(string value);
    partial void OnDIACHIChanged();
    #endregion
		
		public HOCSINH()
		{
			this._KETQUAHOCTAPs = new EntitySet<KETQUAHOCTAP>(new Action<KETQUAHOCTAP>(this.attach_KETQUAHOCTAPs), new Action<KETQUAHOCTAP>(this.detach_KETQUAHOCTAPs));
			this._LOP = default(EntityRef<LOP>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MAHOCSINH", DbType="NChar(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MAHOCSINH
		{
			get
			{
				return this._MAHOCSINH;
			}
			set
			{
				if ((this._MAHOCSINH != value))
				{
					this.OnMAHOCSINHChanging(value);
					this.SendPropertyChanging();
					this._MAHOCSINH = value;
					this.SendPropertyChanged("MAHOCSINH");
					this.OnMAHOCSINHChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MALOP", DbType="NChar(10) NOT NULL", CanBeNull=false)]
		public string MALOP
		{
			get
			{
				return this._MALOP;
			}
			set
			{
				if ((this._MALOP != value))
				{
					if (this._LOP.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMALOPChanging(value);
					this.SendPropertyChanging();
					this._MALOP = value;
					this.SendPropertyChanged("MALOP");
					this.OnMALOPChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HOTEN", DbType="VarChar(100)")]
		public string HOTEN
		{
			get
			{
				return this._HOTEN;
			}
			set
			{
				if ((this._HOTEN != value))
				{
					this.OnHOTENChanging(value);
					this.SendPropertyChanging();
					this._HOTEN = value;
					this.SendPropertyChanged("HOTEN");
					this.OnHOTENChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GIOITINH", DbType="NVarChar(5)")]
		public string GIOITINH
		{
			get
			{
				return this._GIOITINH;
			}
			set
			{
				if ((this._GIOITINH != value))
				{
					this.OnGIOITINHChanging(value);
					this.SendPropertyChanging();
					this._GIOITINH = value;
					this.SendPropertyChanged("GIOITINH");
					this.OnGIOITINHChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NGAYSINH", DbType="Date")]
		public System.Nullable<System.DateTime> NGAYSINH
		{
			get
			{
				return this._NGAYSINH;
			}
			set
			{
				if ((this._NGAYSINH != value))
				{
					this.OnNGAYSINHChanging(value);
					this.SendPropertyChanging();
					this._NGAYSINH = value;
					this.SendPropertyChanged("NGAYSINH");
					this.OnNGAYSINHChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DIACHI", DbType="VarChar(300)")]
		public string DIACHI
		{
			get
			{
				return this._DIACHI;
			}
			set
			{
				if ((this._DIACHI != value))
				{
					this.OnDIACHIChanging(value);
					this.SendPropertyChanging();
					this._DIACHI = value;
					this.SendPropertyChanged("DIACHI");
					this.OnDIACHIChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="HOCSINH_KETQUAHOCTAP", Storage="_KETQUAHOCTAPs", ThisKey="MAHOCSINH", OtherKey="MAHOCSINH")]
		public EntitySet<KETQUAHOCTAP> KETQUAHOCTAPs
		{
			get
			{
				return this._KETQUAHOCTAPs;
			}
			set
			{
				this._KETQUAHOCTAPs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="LOP_HOCSINH", Storage="_LOP", ThisKey="MALOP", OtherKey="MALOP", IsForeignKey=true)]
		public LOP LOP
		{
			get
			{
				return this._LOP.Entity;
			}
			set
			{
				LOP previousValue = this._LOP.Entity;
				if (((previousValue != value) 
							|| (this._LOP.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._LOP.Entity = null;
						previousValue.HOCSINHs.Remove(this);
					}
					this._LOP.Entity = value;
					if ((value != null))
					{
						value.HOCSINHs.Add(this);
						this._MALOP = value.MALOP;
					}
					else
					{
						this._MALOP = default(string);
					}
					this.SendPropertyChanged("LOP");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_KETQUAHOCTAPs(KETQUAHOCTAP entity)
		{
			this.SendPropertyChanging();
			entity.HOCSINH = this;
		}
		
		private void detach_KETQUAHOCTAPs(KETQUAHOCTAP entity)
		{
			this.SendPropertyChanging();
			entity.HOCSINH = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.KETQUAHOCTAP")]
	public partial class KETQUAHOCTAP : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _MAKETQUA;
		
		private string _MAHOCSINH;
		
		private System.Nullable<double> _HKI;
		
		private System.Nullable<double> _HKII;
		
		private System.Nullable<double> _CANAM;
		
		private string _HANHKIEMI;
		
		private string _HANHKIEMII;
		
		private string _HKCANAM;
		
		private string _HOCLUCI;
		
		private string _HOCLUCII;
		
		private string _HLCANAM;
		
		private EntitySet<DIEM> _DIEMs;
		
		private EntityRef<HOCSINH> _HOCSINH;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMAKETQUAChanging(string value);
    partial void OnMAKETQUAChanged();
    partial void OnMAHOCSINHChanging(string value);
    partial void OnMAHOCSINHChanged();
    partial void OnHKIChanging(System.Nullable<double> value);
    partial void OnHKIChanged();
    partial void OnHKIIChanging(System.Nullable<double> value);
    partial void OnHKIIChanged();
    partial void OnCANAMChanging(System.Nullable<double> value);
    partial void OnCANAMChanged();
    partial void OnHANHKIEMIChanging(string value);
    partial void OnHANHKIEMIChanged();
    partial void OnHANHKIEMIIChanging(string value);
    partial void OnHANHKIEMIIChanged();
    partial void OnHKCANAMChanging(string value);
    partial void OnHKCANAMChanged();
    partial void OnHOCLUCIChanging(string value);
    partial void OnHOCLUCIChanged();
    partial void OnHOCLUCIIChanging(string value);
    partial void OnHOCLUCIIChanged();
    partial void OnHLCANAMChanging(string value);
    partial void OnHLCANAMChanged();
    #endregion
		
		public KETQUAHOCTAP()
		{
			this._DIEMs = new EntitySet<DIEM>(new Action<DIEM>(this.attach_DIEMs), new Action<DIEM>(this.detach_DIEMs));
			this._HOCSINH = default(EntityRef<HOCSINH>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MAKETQUA", DbType="NChar(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MAKETQUA
		{
			get
			{
				return this._MAKETQUA;
			}
			set
			{
				if ((this._MAKETQUA != value))
				{
					this.OnMAKETQUAChanging(value);
					this.SendPropertyChanging();
					this._MAKETQUA = value;
					this.SendPropertyChanged("MAKETQUA");
					this.OnMAKETQUAChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MAHOCSINH", DbType="NChar(10)")]
		public string MAHOCSINH
		{
			get
			{
				return this._MAHOCSINH;
			}
			set
			{
				if ((this._MAHOCSINH != value))
				{
					if (this._HOCSINH.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMAHOCSINHChanging(value);
					this.SendPropertyChanging();
					this._MAHOCSINH = value;
					this.SendPropertyChanged("MAHOCSINH");
					this.OnMAHOCSINHChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HKI", DbType="Float")]
		public System.Nullable<double> HKI
		{
			get
			{
				return this._HKI;
			}
			set
			{
				if ((this._HKI != value))
				{
					this.OnHKIChanging(value);
					this.SendPropertyChanging();
					this._HKI = value;
					this.SendPropertyChanged("HKI");
					this.OnHKIChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HKII", DbType="Float")]
		public System.Nullable<double> HKII
		{
			get
			{
				return this._HKII;
			}
			set
			{
				if ((this._HKII != value))
				{
					this.OnHKIIChanging(value);
					this.SendPropertyChanging();
					this._HKII = value;
					this.SendPropertyChanged("HKII");
					this.OnHKIIChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CANAM", DbType="Float")]
		public System.Nullable<double> CANAM
		{
			get
			{
				return this._CANAM;
			}
			set
			{
				if ((this._CANAM != value))
				{
					this.OnCANAMChanging(value);
					this.SendPropertyChanging();
					this._CANAM = value;
					this.SendPropertyChanged("CANAM");
					this.OnCANAMChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HANHKIEMI", DbType="NVarChar(50)")]
		public string HANHKIEMI
		{
			get
			{
				return this._HANHKIEMI;
			}
			set
			{
				if ((this._HANHKIEMI != value))
				{
					this.OnHANHKIEMIChanging(value);
					this.SendPropertyChanging();
					this._HANHKIEMI = value;
					this.SendPropertyChanged("HANHKIEMI");
					this.OnHANHKIEMIChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HANHKIEMII", DbType="NVarChar(50)")]
		public string HANHKIEMII
		{
			get
			{
				return this._HANHKIEMII;
			}
			set
			{
				if ((this._HANHKIEMII != value))
				{
					this.OnHANHKIEMIIChanging(value);
					this.SendPropertyChanging();
					this._HANHKIEMII = value;
					this.SendPropertyChanged("HANHKIEMII");
					this.OnHANHKIEMIIChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HKCANAM", DbType="NVarChar(50)")]
		public string HKCANAM
		{
			get
			{
				return this._HKCANAM;
			}
			set
			{
				if ((this._HKCANAM != value))
				{
					this.OnHKCANAMChanging(value);
					this.SendPropertyChanging();
					this._HKCANAM = value;
					this.SendPropertyChanged("HKCANAM");
					this.OnHKCANAMChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HOCLUCI", DbType="NVarChar(50)")]
		public string HOCLUCI
		{
			get
			{
				return this._HOCLUCI;
			}
			set
			{
				if ((this._HOCLUCI != value))
				{
					this.OnHOCLUCIChanging(value);
					this.SendPropertyChanging();
					this._HOCLUCI = value;
					this.SendPropertyChanged("HOCLUCI");
					this.OnHOCLUCIChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HOCLUCII", DbType="NVarChar(50)")]
		public string HOCLUCII
		{
			get
			{
				return this._HOCLUCII;
			}
			set
			{
				if ((this._HOCLUCII != value))
				{
					this.OnHOCLUCIIChanging(value);
					this.SendPropertyChanging();
					this._HOCLUCII = value;
					this.SendPropertyChanged("HOCLUCII");
					this.OnHOCLUCIIChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HLCANAM", DbType="NVarChar(50)")]
		public string HLCANAM
		{
			get
			{
				return this._HLCANAM;
			}
			set
			{
				if ((this._HLCANAM != value))
				{
					this.OnHLCANAMChanging(value);
					this.SendPropertyChanging();
					this._HLCANAM = value;
					this.SendPropertyChanged("HLCANAM");
					this.OnHLCANAMChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="KETQUAHOCTAP_DIEM", Storage="_DIEMs", ThisKey="MAKETQUA", OtherKey="MAKETQUA")]
		public EntitySet<DIEM> DIEMs
		{
			get
			{
				return this._DIEMs;
			}
			set
			{
				this._DIEMs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="HOCSINH_KETQUAHOCTAP", Storage="_HOCSINH", ThisKey="MAHOCSINH", OtherKey="MAHOCSINH", IsForeignKey=true)]
		public HOCSINH HOCSINH
		{
			get
			{
				return this._HOCSINH.Entity;
			}
			set
			{
				HOCSINH previousValue = this._HOCSINH.Entity;
				if (((previousValue != value) 
							|| (this._HOCSINH.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._HOCSINH.Entity = null;
						previousValue.KETQUAHOCTAPs.Remove(this);
					}
					this._HOCSINH.Entity = value;
					if ((value != null))
					{
						value.KETQUAHOCTAPs.Add(this);
						this._MAHOCSINH = value.MAHOCSINH;
					}
					else
					{
						this._MAHOCSINH = default(string);
					}
					this.SendPropertyChanged("HOCSINH");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_DIEMs(DIEM entity)
		{
			this.SendPropertyChanging();
			entity.KETQUAHOCTAP = this;
		}
		
		private void detach_DIEMs(DIEM entity)
		{
			this.SendPropertyChanging();
			entity.KETQUAHOCTAP = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.KHOI")]
	public partial class KHOI : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _MAKHOI;
		
		private string _TENKHOI;
		
		private System.Nullable<int> _SOLOPTOIDA;
		
		private EntitySet<LOP> _LOPs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMAKHOIChanging(string value);
    partial void OnMAKHOIChanged();
    partial void OnTENKHOIChanging(string value);
    partial void OnTENKHOIChanged();
    partial void OnSOLOPTOIDAChanging(System.Nullable<int> value);
    partial void OnSOLOPTOIDAChanged();
    #endregion
		
		public KHOI()
		{
			this._LOPs = new EntitySet<LOP>(new Action<LOP>(this.attach_LOPs), new Action<LOP>(this.detach_LOPs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MAKHOI", DbType="NChar(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MAKHOI
		{
			get
			{
				return this._MAKHOI;
			}
			set
			{
				if ((this._MAKHOI != value))
				{
					this.OnMAKHOIChanging(value);
					this.SendPropertyChanging();
					this._MAKHOI = value;
					this.SendPropertyChanged("MAKHOI");
					this.OnMAKHOIChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TENKHOI", DbType="NVarChar(50)")]
		public string TENKHOI
		{
			get
			{
				return this._TENKHOI;
			}
			set
			{
				if ((this._TENKHOI != value))
				{
					this.OnTENKHOIChanging(value);
					this.SendPropertyChanging();
					this._TENKHOI = value;
					this.SendPropertyChanged("TENKHOI");
					this.OnTENKHOIChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SOLOPTOIDA", DbType="Int")]
		public System.Nullable<int> SOLOPTOIDA
		{
			get
			{
				return this._SOLOPTOIDA;
			}
			set
			{
				if ((this._SOLOPTOIDA != value))
				{
					this.OnSOLOPTOIDAChanging(value);
					this.SendPropertyChanging();
					this._SOLOPTOIDA = value;
					this.SendPropertyChanged("SOLOPTOIDA");
					this.OnSOLOPTOIDAChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="KHOI_LOP", Storage="_LOPs", ThisKey="MAKHOI", OtherKey="MAKHOI")]
		public EntitySet<LOP> LOPs
		{
			get
			{
				return this._LOPs;
			}
			set
			{
				this._LOPs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_LOPs(LOP entity)
		{
			this.SendPropertyChanging();
			entity.KHOI = this;
		}
		
		private void detach_LOPs(LOP entity)
		{
			this.SendPropertyChanging();
			entity.KHOI = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.LOP")]
	public partial class LOP : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _MALOP;
		
		private string _MAKHOI;
		
		private string _TENLOP;
		
		private System.Nullable<int> _SISO;
		
		private string _MATKB;
		
		private EntitySet<HOCSINH> _HOCSINHs;
		
		private EntitySet<PHANCONG> _PHANCONGs;
		
		private EntityRef<KHOI> _KHOI;
		
		private EntityRef<THOIKHOABIEU> _THOIKHOABIEU;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMALOPChanging(string value);
    partial void OnMALOPChanged();
    partial void OnMAKHOIChanging(string value);
    partial void OnMAKHOIChanged();
    partial void OnTENLOPChanging(string value);
    partial void OnTENLOPChanged();
    partial void OnSISOChanging(System.Nullable<int> value);
    partial void OnSISOChanged();
    partial void OnMATKBChanging(string value);
    partial void OnMATKBChanged();
    #endregion
		
		public LOP()
		{
			this._HOCSINHs = new EntitySet<HOCSINH>(new Action<HOCSINH>(this.attach_HOCSINHs), new Action<HOCSINH>(this.detach_HOCSINHs));
			this._PHANCONGs = new EntitySet<PHANCONG>(new Action<PHANCONG>(this.attach_PHANCONGs), new Action<PHANCONG>(this.detach_PHANCONGs));
			this._KHOI = default(EntityRef<KHOI>);
			this._THOIKHOABIEU = default(EntityRef<THOIKHOABIEU>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MALOP", DbType="NChar(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MALOP
		{
			get
			{
				return this._MALOP;
			}
			set
			{
				if ((this._MALOP != value))
				{
					this.OnMALOPChanging(value);
					this.SendPropertyChanging();
					this._MALOP = value;
					this.SendPropertyChanged("MALOP");
					this.OnMALOPChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MAKHOI", DbType="NChar(10) NOT NULL", CanBeNull=false)]
		public string MAKHOI
		{
			get
			{
				return this._MAKHOI;
			}
			set
			{
				if ((this._MAKHOI != value))
				{
					if (this._KHOI.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMAKHOIChanging(value);
					this.SendPropertyChanging();
					this._MAKHOI = value;
					this.SendPropertyChanged("MAKHOI");
					this.OnMAKHOIChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TENLOP", DbType="NVarChar(50)")]
		public string TENLOP
		{
			get
			{
				return this._TENLOP;
			}
			set
			{
				if ((this._TENLOP != value))
				{
					this.OnTENLOPChanging(value);
					this.SendPropertyChanging();
					this._TENLOP = value;
					this.SendPropertyChanged("TENLOP");
					this.OnTENLOPChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SISO", DbType="Int")]
		public System.Nullable<int> SISO
		{
			get
			{
				return this._SISO;
			}
			set
			{
				if ((this._SISO != value))
				{
					this.OnSISOChanging(value);
					this.SendPropertyChanging();
					this._SISO = value;
					this.SendPropertyChanged("SISO");
					this.OnSISOChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MATKB", DbType="NChar(10)")]
		public string MATKB
		{
			get
			{
				return this._MATKB;
			}
			set
			{
				if ((this._MATKB != value))
				{
					if (this._THOIKHOABIEU.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMATKBChanging(value);
					this.SendPropertyChanging();
					this._MATKB = value;
					this.SendPropertyChanged("MATKB");
					this.OnMATKBChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="LOP_HOCSINH", Storage="_HOCSINHs", ThisKey="MALOP", OtherKey="MALOP")]
		public EntitySet<HOCSINH> HOCSINHs
		{
			get
			{
				return this._HOCSINHs;
			}
			set
			{
				this._HOCSINHs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="LOP_PHANCONG", Storage="_PHANCONGs", ThisKey="MALOP", OtherKey="MALOP")]
		public EntitySet<PHANCONG> PHANCONGs
		{
			get
			{
				return this._PHANCONGs;
			}
			set
			{
				this._PHANCONGs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="KHOI_LOP", Storage="_KHOI", ThisKey="MAKHOI", OtherKey="MAKHOI", IsForeignKey=true)]
		public KHOI KHOI
		{
			get
			{
				return this._KHOI.Entity;
			}
			set
			{
				KHOI previousValue = this._KHOI.Entity;
				if (((previousValue != value) 
							|| (this._KHOI.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._KHOI.Entity = null;
						previousValue.LOPs.Remove(this);
					}
					this._KHOI.Entity = value;
					if ((value != null))
					{
						value.LOPs.Add(this);
						this._MAKHOI = value.MAKHOI;
					}
					else
					{
						this._MAKHOI = default(string);
					}
					this.SendPropertyChanged("KHOI");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="THOIKHOABIEU_LOP", Storage="_THOIKHOABIEU", ThisKey="MATKB", OtherKey="MATKB", IsForeignKey=true)]
		public THOIKHOABIEU THOIKHOABIEU
		{
			get
			{
				return this._THOIKHOABIEU.Entity;
			}
			set
			{
				THOIKHOABIEU previousValue = this._THOIKHOABIEU.Entity;
				if (((previousValue != value) 
							|| (this._THOIKHOABIEU.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._THOIKHOABIEU.Entity = null;
						previousValue.LOPs.Remove(this);
					}
					this._THOIKHOABIEU.Entity = value;
					if ((value != null))
					{
						value.LOPs.Add(this);
						this._MATKB = value.MATKB;
					}
					else
					{
						this._MATKB = default(string);
					}
					this.SendPropertyChanged("THOIKHOABIEU");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_HOCSINHs(HOCSINH entity)
		{
			this.SendPropertyChanging();
			entity.LOP = this;
		}
		
		private void detach_HOCSINHs(HOCSINH entity)
		{
			this.SendPropertyChanging();
			entity.LOP = null;
		}
		
		private void attach_PHANCONGs(PHANCONG entity)
		{
			this.SendPropertyChanging();
			entity.LOP = this;
		}
		
		private void detach_PHANCONGs(PHANCONG entity)
		{
			this.SendPropertyChanging();
			entity.LOP = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.MONHOC")]
	public partial class MONHOC : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _MAMON;
		
		private string _TENMON;
		
		private EntitySet<DIEM> _DIEMs;
		
		private EntitySet<GIAOVIEN> _GIAOVIENs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMAMONChanging(string value);
    partial void OnMAMONChanged();
    partial void OnTENMONChanging(string value);
    partial void OnTENMONChanged();
    #endregion
		
		public MONHOC()
		{
			this._DIEMs = new EntitySet<DIEM>(new Action<DIEM>(this.attach_DIEMs), new Action<DIEM>(this.detach_DIEMs));
			this._GIAOVIENs = new EntitySet<GIAOVIEN>(new Action<GIAOVIEN>(this.attach_GIAOVIENs), new Action<GIAOVIEN>(this.detach_GIAOVIENs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MAMON", DbType="NChar(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MAMON
		{
			get
			{
				return this._MAMON;
			}
			set
			{
				if ((this._MAMON != value))
				{
					this.OnMAMONChanging(value);
					this.SendPropertyChanging();
					this._MAMON = value;
					this.SendPropertyChanged("MAMON");
					this.OnMAMONChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TENMON", DbType="NVarChar(50)")]
		public string TENMON
		{
			get
			{
				return this._TENMON;
			}
			set
			{
				if ((this._TENMON != value))
				{
					this.OnTENMONChanging(value);
					this.SendPropertyChanging();
					this._TENMON = value;
					this.SendPropertyChanged("TENMON");
					this.OnTENMONChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MONHOC_DIEM", Storage="_DIEMs", ThisKey="MAMON", OtherKey="MAMON")]
		public EntitySet<DIEM> DIEMs
		{
			get
			{
				return this._DIEMs;
			}
			set
			{
				this._DIEMs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MONHOC_GIAOVIEN", Storage="_GIAOVIENs", ThisKey="MAMON", OtherKey="MAMON")]
		public EntitySet<GIAOVIEN> GIAOVIENs
		{
			get
			{
				return this._GIAOVIENs;
			}
			set
			{
				this._GIAOVIENs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_DIEMs(DIEM entity)
		{
			this.SendPropertyChanging();
			entity.MONHOC = this;
		}
		
		private void detach_DIEMs(DIEM entity)
		{
			this.SendPropertyChanging();
			entity.MONHOC = null;
		}
		
		private void attach_GIAOVIENs(GIAOVIEN entity)
		{
			this.SendPropertyChanging();
			entity.MONHOC = this;
		}
		
		private void detach_GIAOVIENs(GIAOVIEN entity)
		{
			this.SendPropertyChanging();
			entity.MONHOC = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.PHANCONG")]
	public partial class PHANCONG : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _MAGIAOVIEN;
		
		private string _MALOP;
		
		private EntityRef<GIAOVIEN> _GIAOVIEN;
		
		private EntityRef<LOP> _LOP;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMAGIAOVIENChanging(string value);
    partial void OnMAGIAOVIENChanged();
    partial void OnMALOPChanging(string value);
    partial void OnMALOPChanged();
    #endregion
		
		public PHANCONG()
		{
			this._GIAOVIEN = default(EntityRef<GIAOVIEN>);
			this._LOP = default(EntityRef<LOP>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MAGIAOVIEN", DbType="NChar(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MAGIAOVIEN
		{
			get
			{
				return this._MAGIAOVIEN;
			}
			set
			{
				if ((this._MAGIAOVIEN != value))
				{
					if (this._GIAOVIEN.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMAGIAOVIENChanging(value);
					this.SendPropertyChanging();
					this._MAGIAOVIEN = value;
					this.SendPropertyChanged("MAGIAOVIEN");
					this.OnMAGIAOVIENChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MALOP", DbType="NChar(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MALOP
		{
			get
			{
				return this._MALOP;
			}
			set
			{
				if ((this._MALOP != value))
				{
					if (this._LOP.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMALOPChanging(value);
					this.SendPropertyChanging();
					this._MALOP = value;
					this.SendPropertyChanged("MALOP");
					this.OnMALOPChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="GIAOVIEN_PHANCONG", Storage="_GIAOVIEN", ThisKey="MAGIAOVIEN", OtherKey="MAGIAOVIEN", IsForeignKey=true)]
		public GIAOVIEN GIAOVIEN
		{
			get
			{
				return this._GIAOVIEN.Entity;
			}
			set
			{
				GIAOVIEN previousValue = this._GIAOVIEN.Entity;
				if (((previousValue != value) 
							|| (this._GIAOVIEN.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._GIAOVIEN.Entity = null;
						previousValue.PHANCONGs.Remove(this);
					}
					this._GIAOVIEN.Entity = value;
					if ((value != null))
					{
						value.PHANCONGs.Add(this);
						this._MAGIAOVIEN = value.MAGIAOVIEN;
					}
					else
					{
						this._MAGIAOVIEN = default(string);
					}
					this.SendPropertyChanged("GIAOVIEN");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="LOP_PHANCONG", Storage="_LOP", ThisKey="MALOP", OtherKey="MALOP", IsForeignKey=true)]
		public LOP LOP
		{
			get
			{
				return this._LOP.Entity;
			}
			set
			{
				LOP previousValue = this._LOP.Entity;
				if (((previousValue != value) 
							|| (this._LOP.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._LOP.Entity = null;
						previousValue.PHANCONGs.Remove(this);
					}
					this._LOP.Entity = value;
					if ((value != null))
					{
						value.PHANCONGs.Add(this);
						this._MALOP = value.MALOP;
					}
					else
					{
						this._MALOP = default(string);
					}
					this.SendPropertyChanged("LOP");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
